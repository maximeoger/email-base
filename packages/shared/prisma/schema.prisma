generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model collection {
  id               BigInt             @id @default(autoincrement())
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime           @default(now()) @db.Timestamptz(6)
  name             String
  description      String?
  user_id          BigInt?   
  user             user?              @relation(fields: [user_id], references: [id], onDelete: Cascade)             
  collection_email collection_email[]
}

model user {
  id               BigInt             @id @default(autoincrement())
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime           @default(now()) @db.Timestamptz(6)
  sub              String             @unique
  name             String
  email            String             @unique
  collections      collection[]            
}

model collection_email {
  id            BigInt     @id @default(autoincrement())
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime   @default(now()) @db.Timestamptz(6)
  collection_id BigInt
  email_id      BigInt
  collection    collection @relation(fields: [collection_id], references: [id], onDelete: Cascade)
  email         email      @relation(fields: [email_id], references: [id], onDelete: Cascade)
}

model email {
  id                BigInt              @id(map: "Email_pkey") @unique @default(autoincrement())
  uid               String              @unique
  subject           String?
  body_html         String?
  created_at        DateTime?           @default(now()) @db.Timestamp(6)
  sender_id         BigInt
  screenshot_id     BigInt?             @unique

  collection_email  collection_email[]
  sender            sender              @relation(fields: [sender_id], references: [id], onDelete: Cascade)

  screenshot        email_screenshot    @relation(name: "EmailScreenshotRelation", fields: [screenshot_id], references: [id], onDelete: Cascade)
}

model email_screenshot {
  id BigInt @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  filename String
  path String
  email email @relation("EmailScreenshotRelation")
}

model sender {
  id BigInt @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  name String @db.VarChar
  address String @unique @db.VarChar
  logo String?
  email email[]
}
