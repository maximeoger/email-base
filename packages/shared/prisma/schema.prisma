generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  id              BigInt            @id @default(autoincrement())
  createdAt       DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime          @default(now()) @db.Timestamptz(6)
  name            String
  description     String?
  userId          BigInt?   
  user            User?             @relation(fields: [userId], references: [id], onDelete: Cascade)             
  collectionEmail CollectionEmail[]
}

model User {
  id          BigInt       @id @default(autoincrement())
  createdAt   DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime     @default(now()) @db.Timestamptz(6)
  sub         String?      @unique
  name        String
  email       String       @unique
  collections Collection[]            
}

model CollectionEmail {
  id            BigInt     @id @default(autoincrement())
  createdAt     DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime   @default(now()) @db.Timestamptz(6)
  collectionId  BigInt
  emailId       BigInt
  collection    Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  email         Email      @relation(fields: [emailId], references: [id], onDelete: Cascade)
}

model Email {
  id                BigInt              @id(map: "Email_pkey") @unique @default(autoincrement())
  uid               String              @unique
  subject           String?
  bodyHtml          String?
  createdAt         DateTime?           @default(now()) @db.Timestamp(6)
  senderId          BigInt
  screenshotId      BigInt?             @unique
  collectionEmail   CollectionEmail[]
  sender            Sender              @relation(fields: [senderId], references: [id], onDelete: Cascade)
  screenshot        EmailScreenshot?    @relation(name: "EmailScreenshotRelation", fields: [screenshotId], references: [id], onDelete: Cascade)
}

model EmailScreenshot {
  id          BigInt         @id @default(autoincrement())
  createdAt   DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime       @default(now()) @db.Timestamptz(6)
  filename    String
  path        String
  email       Email?         @relation("EmailScreenshotRelation")
}

model Sender {
  id          BigInt         @id @default(autoincrement())
  createdAt   DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime       @default(now()) @db.Timestamptz(6)
  name        String         @db.VarChar
  address     String         @unique @db.VarChar
  logo        String?
  email       Email[]
}
